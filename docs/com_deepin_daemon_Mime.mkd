# /com/deepin/daemon/Manager
***
## Interfaces
***
### com.deepin.daemon/Manager
***
#### Methods
***

- func (m *Manager) AddUserApp(mimes []string, desktopId string) error
> None

- func (m *Manager) DeleteUserApp(desktopId string) error
> None

- func (m *Manager) GetDefaultApp(ty string) (string, error)
> 返回值：{"Id":"google-chrome.desktop","Name":"Google Chrome","DisplayName":"网页浏览器","Description":"访问互联网","Icon":"google-chrome","Exec":"/usr/bin/google-chrome-stable %U"}

- func (m *Manager) ListApps(ty string) string
> 返回值：[{"Id":"firefox.desktop","Name":"Firefox","DisplayName":"Web Browser","Description":"Browse the World Wide Web","Icon":"firefox","Exec":"firefox %u"},{"Id":"google-chrome.desktop","Name":"Google Chrome","DisplayName":"网页浏览器","Description":"访问互联网","Icon":"google-chrome","Exec":"/usr/bin/google-chrome-stable %U"}]

- func (m *Manager) ListUserApps(ty string) string
> None

- func (m *Manager) Reset()
> None

***
#### Signals
***

- Change



***
# /com/deepin/daemon/Media
***
## Interfaces
***
### com.deepin.daemon.Media
***
#### Methods
***

- func (media *Media) EnableAutoOpen(enabled bool)
> None

- func (media *Media) GetDefaultApp(ty string) (string, error)
> None

- func (media *Media) ListApps(ty string) string
> None

- func (media *Media) Reset()
> None

***
#### Properties
***

- Boolean AutoOpen (read)
> None

